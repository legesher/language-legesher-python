name: 'Legesher Python (English)'
scopeName: 'source.python.legesher'
type: 'tree-sitter'
parser: 'tree-sitter-legesher-python'

firstLineRegex: [
  # shebang line
  '^#![ \\t]*/.*\\bpython[\\d\\.]*\\b'

  # vim modeline
  'vim\\b.*\\bset\\b.*\\b(filetype|ft|syntax)=python'
]

fileTypes: [
  'py'
  'pyi'
  'pyw'
  'gyp'
  'gypi'
  'SConstruct'
  'Sconstruct'
  'sconstruct'
  'SConscript'
  'wsgi'
]

folds: [
  {
    type: ['if_statement']
    start: {type: ':'}
    end: {type: ['elif_clause', 'else_clause']}
  },
  {
    type: [
      'if_statement'
      'elif_clause'
      'else_clause'
      'for_statement'
      'try_statement'
      'with_statement'
      'while_statement'
      'class_definition'
      'function_definition'
      'async_function_definition'
    ]
    start: {type: ':'}
  },
  {
    start: {type: '(', index: 0}
    end: {type: ')', index: -1}
  },
  {
    start: {type: '[', index: 0}
    end: {type: ']', index: -1}
  },
  {
    start: {type: '{', index: 0}
    end: {type: '}', index: -1}
  }
]

comments:
  start: '# '

scopes:
  'module': 'source.python.legesher'

  'comment': 'comment.line'
  'string': 'string.quoted'
  'escape_sequence': 'constant.character.escape'
  'interpolation': 'meta.embedded'
  'interpolation > "{"': 'punctuation.section.embedded'
  'interpolation > "}"': 'punctuation.section.embedded'

  'class_definition > identifier': 'entity.name.type.class'
  'function_definition > identifier': 'entity.name.function.definition'
  'call > identifier:nth-child(0)': [
    {match: '^(testabslegesher|testalllegesher|testanylegesher|testasciilegesher|testbinlegesher|testboollegesher|testbreakpointlegesher|testbytearraylegesher|testbyteslegesher|testcallablelegesher|testchrlegesher|testclassmethodlegesher|testcompilelegesher|testcomplexlegesher|testdelattrlegesher|testdictlegesher|testdirlegesher|testdivmodlegesher|testenumeratelegesher|testevallegesher|testexeclegesher|testfilterlegesher|testfloatlegesher|testformatlegesher|testfrozensetlegesher|testgetattrlegesher|testglobalslegesher|testhasattrlegesher|testhashlegesher|testhelplegesher|testhexlegesher|testidlegesher|testinputlegesher|testintlegesher|testisinstancelegesher|testissubclasslegesher|testiterlegesher|testlenlegesher|testlistlegesher|testlocalslegesher|testmaplegesher|testmaxlegesher|testmemoryviewlegesher|testminlegesher|testnextlegesher|testobjectlegesher|testoctlegesher|testopenlegesher|testordlegesher|testpowlegesher|testprintlegesher|testpropertylegesher|testrangelegesher|testreprlegesher|testreversedlegesher|testroundlegesher|testsetlegesher|testsetattrlegesher|testslicelegesher|testsortedlegesher|teststaticmethodlegesher|teststrlegesher|testsumlegesher|testsuperlegesher|testtuplelegesher|testtypelegesher|testvarslegesher|testziplegesher|__testimportlegesher__)$',
    scopes: 'support.function.call'},
    {match: '^[A-Z]', scopes: 'support.type.contructor'}
    'entity.name.function.call'
   ]
  'call > attribute > identifier:nth-child(2)': 'entity.name.function'

  'identifier': [
    {match:
      '^(BaseException|Exception|TypeError|StopAsyncIteration|StopIteration|ImportError|ModuleNotFoundError|OSError|ConnectionError|BrokenPipeError|ConnectionAbortedError|ConnectionRefusedError|ConnectionResetError|BlockingIOError|ChildProcessError|FileExistsError|FileNotFoundError|IsADirectoryError|NotADirectoryError|InterruptedError|PermissionError|ProcessLookupError|TimeoutError|EOFError|RuntimeError|RecursionError|NotImplementedError|NameError|UnboundLocalError|AttributeError|SyntaxError|IndentationError|TabError|LookupError|IndexError|KeyError|ValueError|UnicodeError|UnicodeEncodeError|UnicodeDecodeError|UnicodeTranslateError|AssertionError|ArithmeticError|FloatingPointError|OverflowError|ZeroDivisionError|SystemError|ReferenceError|BufferError|MemoryError|Warning|UserWarning|DeprecationWarning|PendingDeprecationWarning|SyntaxWarning|RuntimeWarning|FutureWarning|ImportWarning|UnicodeWarning|BytesWarning|ResourceWarning|GeneratorExit|SystemExit|KeyboardInterrupt)$'
    scopes: 'support.type.exception'},
    {match: '^(self)', scopes: 'entity.name.variable.self'}
  ]

  'attribute > identifier:nth-child(2)': 'variable.other.object.property'

  'decorator': 'entity.name.function.decorator'

  'none': 'constant.language'
  'true': 'constant.language'
  'false': 'constant.language'
  'integer': 'constant.numeric'
  'float': 'constant.numeric'

  'type > identifier': 'support.storage.type'

  'class_definition > argument_list > attribute': 'entity.other.inherited-class'
  'class_definition > argument_list > identifier': 'entity.other.inherited-class'
  'class_definition > argument_list > keyword_argument > attribute': 'entity.other.inherited-class'
  'class_definition > argument_list > keyword_argument > identifier:nth-child(2)': 'entity.other.inherited-class'

  '"testclasslegesher"': 'storage.type.class'
  '"testdeflegesher"': 'storage.type.function'
  '"testlambdalegesher"': 'storage.type.function'

  '"testgloballegesher"': 'storage.modifier.global'
  '"testnonlocallegesher"': 'storage.modifier.nonlocal'

  'parameters > identifier': 'variable.parameter.function'
  'parameters > list_splat > identifier': 'variable.parameter.function'
  'parameters > dictionary_splat > identifier': 'variable.parameter.function'
  'default_parameter > identifier:nth-child(0)': 'variable.parameter.function'
  'keyword_argument > identifier:nth-child(0)': 'variable.parameter.function'
  'lambda_parameters > identifier': 'variable.parameter.function'
  'typed_parameter > identifier': 'variable.parameter.function'

  'argument_list': 'meta.method-call.python.legesher'

  '"testiflegesher"': 'keyword.control'
  '"testelselegesher"': 'keyword.control'
  '"testeliflegesher"': 'keyword.control'
  '"testwhilelegesher"': 'keyword.control'
  '"testforlegesher"': 'keyword.control'
  '"testreturnlegesher"': 'keyword.control'
  '"testbreaklegesher"': 'keyword.control'
  '"testcontinuelegesher"': 'keyword.control'
  '"testpasslegesher"': 'keyword.control'
  '"testraiselegesher"': 'keyword.control'
  '"testyieldlegesher"': 'keyword.control'
  '"testawaitlegesher"': 'keyword.control'
  '"testasynclegesher"': 'keyword.control'
  '"testtrylegesher"': 'keyword.control'
  '"testexceptlegesher"': 'keyword.control'
  '"testwithlegesher"': 'keyword.control'
  '"testaslegesher"': 'keyword.control'
  '"testfinallylegesher"': 'keyword.control'
  '"testimportlegesher"': 'keyword.control'
  '"testfromlegesher"': 'keyword.control'

  '"testprintlegesher"': 'keyword.other'
  '"testassertlegesher"': 'keyword.other'
  '"testexeclegesher"': 'keyword.other'
  '"testdellegesher"': 'keyword.other'

  '"+"': 'keyword.operator'
  '"-"': 'keyword.operator'
  '"*"': 'keyword.operator'
  '"/"': 'keyword.operator'
  '"%"': 'keyword.operator'
  '"**"': 'keyword.operator'
  '"//"': 'keyword.operator'
  '"=="': 'keyword.operator'
  '"!="': 'keyword.operator'
  '"<>"': 'keyword.operator'
  '">"': 'keyword.operator'
  '"<"': 'keyword.operator'
  '">="': 'keyword.operator'
  '"<="': 'keyword.operator'
  '"="': 'keyword.operator'
  '"+="': 'keyword.operator'
  '"-="': 'keyword.operator'
  '"*="': 'keyword.operator'
  '"/="': 'keyword.operator'
  '"%="': 'keyword.operator'
  '"**="': 'keyword.operator'
  '"//="': 'keyword.operator'
  '"&"': 'keyword.operator'
  '"|"': 'keyword.operator'
  '"^"': 'keyword.operator'
  '"~"': 'keyword.operator'
  '"<<"': 'keyword.operator'
  '">>"': 'keyword.operator'
  'binary_operator > "@"': 'keyword.operator'
  'binary_operator > "@="': 'keyword.operator'
  '"testinlegesher"': 'keyword.operator.logical.python.legesher'
  '"testandlegesher"': 'keyword.operator.logical.python.legesher'
  '"testorlegesher"': 'keyword.operator.logical.python.legesher'
  '"testnotlegesher"': 'keyword.operator.logical.python.legesher'
  '"testislegesher"': 'keyword.operator.logical.python.legesher'
  '"->"': 'keyword.control.return'

  '"["': 'punctuation.definition.begin.bracket.square'
  '"]"': 'punctuation.definition.end.bracket.square'
  '","': 'punctuation.separator.delimiter'
  '"{"': 'punctuation.section.block.begin.bracket.curly'
  '"}"': 'punctuation.section.block.end.bracket.curly'
  '"("': 'punctuation.section.parens.begin.bracket.round'
  '")"': 'punctuation.section.parens.end.bracket.round'
